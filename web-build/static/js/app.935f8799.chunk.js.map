{"version":3,"sources":["app/firebase.js","app/api.js","screens/Cart.js","app/Provider.js","constants/colors.js","components/GridItem/styles.js","components/GridItem/GridItem.js","data/categories.js","screens/Home.js","components/BreadItem.js","data/breads.js","screens/Breads.js","screens/Detail.js","navigation/stacks/ShopNavigator.js","navigation/stacks/CartNavigator.js","navigation/bottomtabs/TabsNavigator.js","screens/AuthScreen.js","navigation/index.js","App.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","db","getFirestore","auth","getAuth","setPersistence","browserLocalPersistence","collection","createOrder","obj","itemsCollection","addDoc","id","Cart","useContext","AppContext","state","clearProduct","getTotal","reduce","acc","price","View","Text","FlatList","data","renderItem","item","name","TouchableOpacity","onPress","keyExtractor","a","async","currentUser","u","console","log","order","buyer","email","items","total","date","Date","toLocaleString","generateOrder","Provider","children","useState","setState","value","addToCart","product","filter","productInCart","length","isInCart","createContext","COLORS","styles","StyleSheet","create","container","height","flex","borderRadius","shadowColor","shadowOpacity","shadowOffset","width","shadowRadius","elevation","justifyContent","alignItems","padding","title","color","GridItem","onSelected","style","backgroundColor","CATEGORIES","btn","marginLeft","white","alignSelf","grid","flexDirection","Home","navigation","handleSelectedCategory","route","navigate","categoryId","numColumns","BreadItem","breadItem","tit","details","weight","margin","fontSize","BREADS","category","description","Breads","breads","bread","params","handleSelected","Detail","marginBottom","Stack","createStackNavigator","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","fontWeight","Screen","component","options","BottomTabs","createBottomTabNavigator","BTabs","headerShown","tabBarShowLabel","tabBarStyles","tabBar","ShopNavigator","tabBarIcon","focused","Ionicons","size","CartNavigator","position","bottom","left","right","AuthScreen","setEmail","password","setPassword","KeyboardAvoidingView","behavior","screen","label","TextInput","input","keyboardType","autoCapitalize","onChangeText","text","secureTextEntry","prompt","promptMessage","signInWithEmailAndPassword","then","userCredential","user","uid","catch","error","signIn","promptButton","createUserWithEmailAndPassword","setDoc","doc","signUp","justifyContet","textAlign","maxWidth","borderColor","borderWidth","button","marginVertical","MainNavigator","isLogged","setIsLogged","useEffect","onAuthStateChanged","NavigationContainer","TabsNavigator","App"],"mappings":"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","file":"static/js/app.935f8799.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getAuth, setPersistence, browserLocalPersistence } from 'firebase/auth';\r\nimport { REACT_APP_PROJECT_ID, REACT_APP_API_KEY } from '@env'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: REACT_APP_API_KEY,\r\n    authDomain: REACT_APP_PROJECT_ID + '.firebaseapp.com',\r\n    projectId: REACT_APP_PROJECT_ID,\r\n    storageBucket: REACT_APP_PROJECT_ID + \".appspot.com\",\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nexport const db = getFirestore();\r\nexport const auth = getAuth(firebaseApp);\r\n\r\n// Si descomentas la siguiente línea, cuando mientras que el usuario no se desloguee expresamente o cierre el navegador, permanecerá logueado y podremos acceder a su id desde cualquier página\r\nsetPersistence(auth, browserLocalPersistence);","import { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from \"firebase/auth\";\r\nimport { auth } from \"./firebase\";\r\nimport { collection, getDocs, query, doc, getDoc, addDoc, deleteDoc, updateDoc, setDoc, where } from \"firebase/firestore\";\r\nimport { db } from './firebase';\r\n\r\nconst itemsCollection = collection(db, 'items');\r\n\r\n// CREATE\r\nexport const createOrder = (obj) => {\r\n    const itemsCollection = collection(db, 'orders');\r\n    return addDoc(itemsCollection, obj).id;\r\n}\r\n\r\n\r\nexport const signUp = async (email, password) => {\r\n    createUserWithEmailAndPassword(auth, email, password).then(async (userCredential) => {\r\n        const user = userCredential.user;\r\n        await setDoc(doc(db, 'users', user.uid));\r\n        return user.uid;\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n}\r\n\r\nexport const signIn = async (email, password) => {\r\n    return await signInWithEmailAndPassword(auth, email, password).then(async (userCredential) => {\r\n        console.log(userCredential);\r\n        const user = userCredential.user;\r\n        return user.uid;\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const getCurrentUser = async () => await auth.currentUser;\r\nexport const logout = async () => await signOut(auth);\r\n\r\n","import React from 'react';\r\nimport { useContext } from \"react\";\r\nimport { View, Text, FlatList, TouchableOpacity } from 'react-native';\r\nimport { AppContext } from \"../app/Provider\";\r\nimport { getCurrentUser, createOrder } from '../app/api';\r\nimport { async } from '@firebase/util';\r\n\r\nconst Cart = () => {\r\n    const { state, clearProduct } = useContext(AppContext);\r\n\r\n    const generateOrder = async () => {\r\n        const u = await getCurrentUser();\r\n        console.log(u)\r\n        const order = {\r\n            buyer: u.email,\r\n            items: state,\r\n            total: getTotal(),\r\n            date: new Date().toLocaleString()\r\n        }\r\n        createOrder(order);\r\n    }\r\n\r\n    const getTotal = () => state.reduce((acc, obj) => acc + obj.price, 0)\r\n    return (\r\n        <View><Text>Cart 4324</Text>\r\n\r\n            <FlatList\r\n                data={state}\r\n                renderItem={({ item }) => <View>\r\n                    <Text>{item.name}</Text>\r\n                    <Text>{item.price}</Text>\r\n                    <TouchableOpacity onPress={() => clearProduct(item)}>Borrar</TouchableOpacity>\r\n                </View>}\r\n                keyExtractor={item => item.id}\r\n            />\r\n\r\n            <Text>{getTotal()}</Text>\r\n\r\n            <TouchableOpacity onPress={() => generateOrder()}>Hacer pedido</TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Cart","import { createContext, useState } from 'react';\r\nimport Cart from '../screens/Cart';\r\n\r\nconst Provider = ({ children }) => {\r\n    const [state, setState] = useState([]);\r\n\r\n\r\n    const isInCart = (product) => {\r\n        return state.filter(productInCart => productInCart.id === product.id).length !== 0 ? true : false;\r\n    }\r\n\r\n    const addToCart = (product) => {\r\n        if (isInCart(product)) return\r\n        else setState([...state, product])\r\n    }\r\n\r\n    const clearProduct = (product) => {\r\n        setState(state.filter(productInCart => productInCart.id !== product.id));\r\n    }\r\n\r\n    return (\r\n        <AppContext.Provider value={{ state, addToCart, clearProduct }}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    );\r\n}\r\n\r\nexport default Provider;\r\nexport const AppContext = createContext();","export const COLORS = {\r\n    primary: '#2D93AD',\r\n    secondary: '#aac0af',\r\n}","import { StyleSheet } from 'react-native';\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        height: 150,\r\n        flex: 1,\r\n        borderRadius: 6,\r\n        shadowColor: 'black',\r\n        shadowOpacity: 0.26,\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowRadius: 6,\r\n        elevation: 3,\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'flex-end',\r\n        padding: 0,\r\n    },\r\n    title: {\r\n        color: 'white'\r\n    }\r\n});\r\n\r\nexport default styles;","import React from 'react'\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\nimport styles from './styles'\r\n\r\n\r\nconst GridItem = ({ item, onSelected }) => {\r\n    return (<View>\r\n        <TouchableOpacity onPress={() => onSelected(item)}\r\n            style={{ ...styles.container, backgroundColor: item.color }}>\r\n            <View style={{ height: 150, width: 200, alignItems: 'center', justifyContent: 'center' }}>\r\n                <Text style={styles.title}>{item.title}</Text>\r\n            </View>\r\n        </TouchableOpacity>\r\n    </View>\r\n    )\r\n}\r\n\r\nexport default GridItem","export const CATEGORIES = [\r\n    {\r\n        id: 1,\r\n        title: 'Harinas Puras',\r\n        color: '#896978'\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Harinas Integrales',\r\n        color: '#839791'\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Panes Saborizados',\r\n        color: '#aac0af'\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'Otros Productos Panadería',\r\n        color: '#896978'\r\n    },\r\n]","import { StyleSheet, View, Text } from 'react-native';\r\nimport { FlatList, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport GridItem from '../components/GridItem/GridItem';\r\nimport { CATEGORIES } from '../data/categories';\r\n\r\nconst Home = ({ navigation, route }) => {\r\n\r\n    const handleSelectedCategory = (item) => {\r\n        navigation.navigate('Breads', {\r\n            categoryId: item.id,\r\n            name: item.title\r\n        })\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <FlatList data={CATEGORIES} numColumns={2} keyExtractor={item => item.id}\r\n                renderItem={({ item }) => <GridItem key={item.id} item={item} onSelected={handleSelectedCategory} />} />\r\n        </View >\r\n    )\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    btn: {\r\n        marginLeft: 20,\r\n        backgroundColor: 'gray',\r\n        padding: 10,\r\n        color: 'white',\r\n        borderRadius: 5\r\n    },\r\n    white: {\r\n        color: 'white'\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        alignSelf: 'stretch',\r\n    },\r\n    grid: {\r\n        flex: 1,\r\n        alignItems: 'stretch',\r\n        flexDirection: 'row',\r\n\r\n    }\r\n\r\n});\r\n\r\nexport default Home","import { View, Text } from \"react-native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { StyleSheet } from \"react-native\";\r\n\r\nconst BreadItem = ({ item, onSelected }) => {\r\n    return (\r\n        <TouchableOpacity onPress={() => onSelected(item)}>\r\n            <View style={styles.breadItem}>\r\n                <View>\r\n                    <Text style={styles.tit}>{item.name}</Text>\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.details}>{item.price}</Text>\r\n                    <Text style={styles.details}>{item.weight}</Text>\r\n                </View>\r\n            </View>\r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\nexport default BreadItem;\r\n\r\nconst styles = StyleSheet.create({\r\n    breadItem: {\r\n        padding: 20,\r\n        margin: 10,\r\n        borderRadius: 3,\r\n        backgroundColor: '#ccc'\r\n    },\r\n    tit: {\r\n        fontSize: 20,\r\n    },\r\n    details: {\r\n        fontSize: 18\r\n    }\r\n})","export const BREADS = [\r\n    {\r\n        id: 1,\r\n        category: 1,\r\n        name: 'Pan Baguette',\r\n        description: 'Clásico pan francés',\r\n        weight: '350gr',\r\n        price: 1600\r\n    },\r\n    {\r\n        id: 2,\r\n        category: 1,\r\n        name: 'Pan Ciabatta Blanco',\r\n        description: 'Pan de alta hidratación, miga alveolada y corteza crujiente',\r\n        weight: '800gr',\r\n        price: 3000\r\n    },\r\n    {\r\n        id: 3,\r\n        category: 1,\r\n        name: 'Pan Hamburguesa',\r\n        description: 'Textura suave, decorado con semillas de sésamo tostadas',\r\n        weight: '120gr',\r\n        price: 500\r\n    },\r\n    {\r\n        id: 4,\r\n        category: 2,\r\n        name: 'Pan de molde Integral de Centeno',\r\n        description: 'Pídelo entero o tajado, con o sin semillas',\r\n        weight: '900gr',\r\n        price: 3300\r\n    },\r\n]","import { View, Text, FlatList } from \"react-native\";\r\nimport BreadItem from \"../components/BreadItem\";\r\nimport { BREADS } from \"../data/breads\";\r\n\r\nconst Breads = ({ navigation, route }) => {\r\n    const breads = BREADS.filter(bread => bread.category === route.params.categoryId)\r\n\r\n    const handleSelected = (item) => {\r\n        navigation.navigate('Detail', {\r\n            bread: item\r\n        })\r\n    }\r\n    return (\r\n        <View>\r\n            <FlatList\r\n                data={breads}\r\n                keyExtractor={item => item.id}\r\n                renderItem={({ item }) => <BreadItem item={item} onSelected={() => handleSelected(item)} />}\r\n            >\r\n                <Text>{route.params.name}</Text>\r\n                <Text>{route.params.categoryId}</Text>\r\n\r\n            </FlatList>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Breads","import BreadItem from \"../components/BreadItem\"\r\nimport { StyleSheet, View, Text, TouchableOpacity } from \"react-native\";\r\nimport { useContext } from \"react\";\r\nimport { AppContext } from \"../app/Provider\";\r\n\r\nconst Detail = ({ navigation, route }) => {\r\n\r\n    const { addToCart } = useContext(AppContext);\r\n\r\n    const bread = route.params.bread;\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>{bread.id} - {bread.name}</Text>\r\n            <Text>{bread.description}</Text>\r\n            <Text>{bread.price}</Text>\r\n            <Text>{bread.weight}</Text>\r\n            <TouchableOpacity onPress={() => addToCart({ id: bread.id, name: bread.name, price: bread.price, weight: bread.weight })}><Text>Añadir al carrito</Text></TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Detail;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        marginBottom: 10\r\n    }\r\n\r\n});","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Home from '../../screens/Home';\r\nimport Breads from '../../screens/Breads';\r\nimport Detail from '../../screens/Detail';\r\nimport { COLORS } from '../../constants/colors';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default () => (\r\n    <Stack.Navigator\r\n        screenOptions={{\r\n            headerStyle: {\r\n                backgroundColor: COLORS.primary\r\n            },\r\n            headerTintColor: COLORS.secondary,\r\n            headerTitleStyle: {\r\n                fontWeight: 'bold'\r\n            }\r\n\r\n        }}\r\n    >\r\n\r\n        <Stack.Screen name=\"Home\" component={Home} />\r\n        <Stack.Screen name=\"Breads\" component={Breads} />\r\n        <Stack.Screen name=\"Detail\" component={Detail} />\r\n\r\n    </Stack.Navigator>\r\n);","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Home from '../../screens/Cart';\r\nimport { COLORS } from '../../constants/colors';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default () => (\r\n    <Stack.Navigator\r\n        screenOptions={{\r\n            headerStyle: {\r\n                backgroundColor: COLORS.primary\r\n            },\r\n            headerTintColor: COLORS.secondary,\r\n            headerTitleStyle: {\r\n                fontWeight: 'bold'\r\n            }\r\n\r\n        }}\r\n    >\r\n\r\n        <Stack.Screen name=\"Cart\" component={Home} options={{ title: 'Carrito' }} />\r\n\r\n\r\n    </Stack.Navigator>\r\n);","import React from 'react';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { COLORS } from '../../constants/colors';\r\nimport { View, Text } from 'react-native';\r\nimport ShopNavigator from '../stacks/ShopNavigator';\r\nimport CartNavigator from '../stacks/CartNavigator';\r\nimport { StyleSheet } from 'react-native';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\nconst BottomTabs = createBottomTabNavigator();\r\n\r\nconst BTabs = () => (\r\n    <BottomTabs.Navigator\r\n        screenOptions={{\r\n            headerStyle: {\r\n                backgroundColor: COLORS.primary\r\n            },\r\n            headerShown: false,\r\n            tabBarShowLabel: true,\r\n            tabBarStyles: styles.tabBar,\r\n            headerTintColor: COLORS.secondary,\r\n            headerTitleStyle: {\r\n                fontWeight: 'bold'\r\n            }\r\n        }}\r\n    >\r\n\r\n        <BottomTabs.Screen name=\"ShopTab\" component={ShopNavigator}\r\n\r\n            options={{\r\n                tabBarIcon: ({ focused }) => <Ionicons name=\"md-home\" size={30} color=\"#900\" />,\r\n                title: \"Shop\"\r\n            }}\r\n\r\n\r\n        />\r\n        <BottomTabs.Screen name=\"CartTab\" component={CartNavigator}\r\n\r\n            options={{\r\n                tabBarIcon: ({ focused }) => <Ionicons name=\"md-cart\" size={30} color=\"#900\" />,\r\n                title: 'cart'\r\n            }}\r\n\r\n        />\r\n\r\n    </BottomTabs.Navigator >\r\n);\r\n\r\n\r\nexport default BTabs;\r\n\r\nconst styles = StyleSheet.create({\r\n    tabBar: {\r\n        shadowColor: '#7f5df0',\r\n        shadowOffset: { width: 0, height: 0 },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 0.25,\r\n        elevation: 5,\r\n        position: 'absolute',\r\n        bottom: 25,\r\n        left: 20,\r\n        right: 20,\r\n        borderRadius: 15,\r\n        height: 90\r\n    },\r\n    item: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    }\r\n})","import React, { useState } from 'react'\r\nimport { KeyboardAvoidingView, StyleSheet, TouchableOpacity, View, Text, TextInput } from 'react-native';\r\nimport { signUp, signIn } from '../app/api';\r\nimport { COLORS } from '../constants/colors';\r\n\r\nconst title = 'REGISTRO',\r\n    message = '¿Ta tienes una cuenta?',\r\n    messageAction = 'Ingresar',\r\n    messageTarget = 'login';\r\n\r\nconst AuthScreen = () => {\r\n    const [isSignUp, setIsSignUp] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    return (\r\n        <KeyboardAvoidingView\r\n            behavior=\"height\"\r\n            style={styles.screen}\r\n        >\r\n            <View style={styles.container}>\r\n                <Text style={styles.title}>\r\n                    {title}\r\n                </Text>\r\n                <Text style={styles.label}>Email</Text>\r\n                <TextInput style={styles.input} keyboardType=\"email-address\" autoCapitalize=\"none\" onChangeText={text => setEmail(text)} />\r\n                <Text style={styles.label} >Clave</Text>\r\n                <TextInput style={styles.input} secureTextEntry autoCapitalize=\"none\" onChangeText={text => setPassword(text)} />\r\n\r\n                <View style={styles.prompt}>\r\n                    <Text style={styles.promptMessage}>\r\n                        {message}\r\n                    </Text>\r\n                    <TouchableOpacity onPress={() => signIn(email, password)}>\r\n                        <Text style={styles.promptButton}>\r\n                            {messageAction}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <TouchableOpacity onPress={() => signUp(email, password)}><Text>Sign Up</Text></TouchableOpacity>\r\n            </View>\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default AuthScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        justifyContet: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 18,\r\n        textAlign: 'center'\r\n    },\r\n    container: {\r\n        width: '80%',\r\n        maxWidth: 400,\r\n        padding: 12,\r\n        margin: 12,\r\n        borderColor: '#ccc',\r\n        borderWidth: 1,\r\n        borderRadius: 10,\r\n        backgroundColor: 'white'\r\n    },\r\n    prompt: {\r\n        alignItems: 'center',\r\n    },\r\n    promptMessage: {\r\n        fontSize: 16,\r\n        color: '#333'\r\n    },\r\n    promptButton: {\r\n        fontSize: 16,\r\n        color: COLORS.primary\r\n    },\r\n    button: {\r\n        backgroundColor: COLORS.primary,\r\n        marginVertical: 20\r\n    },\r\n    label: {\r\n\r\n    },\r\n    input: {\r\n        borderColor: '#ccc',\r\n        borderWidth: 1,\r\n        borderRadius: 10,\r\n        padding: 12,\r\n        marginVertical: 12,\r\n        fontSize: 16,\r\n        color: '#333',\r\n        backgroundColor: '#eee',\r\n        width: '100%'\r\n\r\n    }\r\n})","import React, { useEffect, useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport TabsNavigator from './bottomtabs/TabsNavigator';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { auth } from '../app/firebase';\r\nimport AuthScreen from '../screens/AuthScreen';\r\n\r\nconst MainNavigator = () => {\r\n    const [isLogged, setIsLogged] = useState(false);\r\n\r\n    console.log('isLogged', isLogged)\r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, user => {\r\n            if (user) {\r\n                console.log('user', user);\r\n                const uid = user.uid;\r\n                setIsLogged(true);\r\n            } else {\r\n                console.log(\"No user logged\");\r\n                setIsLogged(false);\r\n            }\r\n        });\r\n    }, []);\r\n    return (<NavigationContainer>\r\n        {isLogged ?\r\n            <TabsNavigator /> :\r\n            <AuthScreen />\r\n        }\r\n    </NavigationContainer>)\r\n\r\n}\r\n\r\nexport default MainNavigator;","import 'dotenv/config';\nimport Provider from './app/Provider';\nimport MainNavigator from './navigation';\n\n\nconst App = () => <Provider><MainNavigator /></Provider>\n\nexport default App; "],"sourceRoot":""}